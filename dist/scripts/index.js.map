{"version":3,"sources":["index.js"],"names":["connection","navigator","mozConnection","webkitConnection","speedElement","document","querySelector","speedTypeElement","waves","querySelectorAll","offline","onLine","supported","addEventListener","watchNetwork","window","getSpeedText","childNodes","nodeValue","setSpeedText","v","innerHTML","map","wave","style","bottom","speed","type","formerSpeed","text","match","toNumber","Math","abs","setSpeed","downlink","effectiveType","setInterval","serviceWorker","register","then","registration","console","log","scope","err"],"mappings":"AAAA,MACE,MAAMA,EAAaC,UAAUD,YAAcC,UAAUC,eAAiBD,UAAUE,iBAC1EC,EAAeC,SAASC,cAAc,eACtCC,EAAmBF,SAASC,cAAc,mBAC1CE,EAAQ,IAAIH,SAASI,iBAAiB,SACtCC,EAAU,KAAOT,UAAUU,OAC3BC,IAAcZ,EAEpBA,EAAWa,iBAAiB,SAAUC,GACtCC,OAAOF,iBAAiB,UAAWC,GACnCC,OAAOF,iBAAiB,SAAUC,GAElC,MAAME,EAAe,IAAMZ,EAAaa,WAAW,GAAGC,UAChDC,EAAgBC,GAAMhB,EAAaa,WAAW,GAAGC,UAAYE,EAEnE,SAASN,IACP,GAAKF,EAAL,CAKA,GAAIF,IAAW,CACb,GAAuB,YAAnBM,IAA8B,OAIlC,OAHAG,EAAa,WACbZ,EAAiBc,UAAY,SAC7Bb,EAAMc,IAAIC,GAAQA,EAAKC,MAAMC,OAAS,WAc1C,SAAkBC,EAAOC,GACvB,MAAMC,EANR,SAAkBC,GAChB,MAAMC,EAAQD,EAAKC,MAAM,WACzB,OAAOA,EAAQA,EAAM,GAAK,EAINC,CAASf,KAC7B,GAAIgB,KAAKC,IAAIL,EAAcF,GAAS,GAAM,OAC1ClB,EAAMc,IAAIC,GAAQA,EAAKC,MAAMC,UAAoB,EAAIC,EAAX,SAC1CP,KAAgBO,SAChBnB,EAAiBc,UAAYM,EAf7BO,CAASlC,EAAWmC,SAAUnC,EAAWoC,oBAZvCjB,EAAa,iBAejBkB,YAAYvB,EAAc,KAetB,kBAAmBb,WACrBc,OAAOF,iBAAiB,OAAQ,WAC9BZ,UAAUqC,cAAcC,SAAS,oBAAoBC,KAAK,SAASC,GAEjEC,QAAQC,IAAI,qDAAsDF,EAAaG,QAC9E,SAASC,GAEVH,QAAQC,IAAI,sCAAuCE,QAtD3D","file":"index.js","sourcesContent":["(() => {\n  const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n  const speedElement = document.querySelector(\".speed-text\")\n  const speedTypeElement = document.querySelector(\".speed-text div\")\n  const waves = [...document.querySelectorAll(\".box\")]\n  const offline = () => !navigator.onLine\n  const supported = !!connection\n  \n  connection.addEventListener(\"change\", watchNetwork)\n  window.addEventListener(\"offline\", watchNetwork)\n  window.addEventListener(\"online\", watchNetwork)\n  \n  const getSpeedText = () => speedElement.childNodes[0].nodeValue;\n  const setSpeedText = (v) => speedElement.childNodes[0].nodeValue = v;\n  \n  function watchNetwork() {\n    if (!supported) {\n      setSpeedText(\"Not Supported\")\n      return\n    }\n\n    if (offline()) {\n      if (getSpeedText() === \"Offline\") return\n      setSpeedText(\"Offline\")\n      speedTypeElement.innerHTML = \"0\"      \n      waves.map(wave => wave.style.bottom = \"-410vw\")\n      return  \n    }\n\n    setSpeed(connection.downlink, connection.effectiveType)\n  }\n\n  setInterval(watchNetwork, 1000)\n  \n  function toNumber(text) {\n    const match = text.match(/[0-9.]+/)\n    return match ? match[0] : 0\n  }\n  \n  function setSpeed(speed, type) {\n    const formerSpeed = toNumber(getSpeedText());\n    if (Math.abs(formerSpeed - speed) < 0.3 ) return\n    waves.map(wave => wave.style.bottom = `${-410 + (3 * speed)}vw`)\n    setSpeedText(`${speed}mbps`)\n    speedTypeElement.innerHTML = type\n  }\n\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function() {\n      navigator.serviceWorker.register('/speedtest/sw.js').then(function(registration) {\n        // Registration was successful\n        console.log('ServiceWorker registration successful with scope: ', registration.scope);\n      }, function(err) {\n        // registration failed :(\n        console.log('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n})()"]}